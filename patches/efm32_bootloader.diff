diff --git a/src/flash/nor/efm32.c b/src/flash/nor/efm32.c
index 6f2900762..7223b5a7c 100644
--- a/src/flash/nor/efm32.c
+++ b/src/flash/nor/efm32.c
@@ -52,15 +52,16 @@
 
 #define EFM32_MSC_USER_DATA             EFM32_MSC_INFO_BASE
 #define EFM32_MSC_LOCK_BITS             (EFM32_MSC_INFO_BASE+0x4000)
-#define EFM32_MSC_DEV_INFO              (EFM32_MSC_INFO_BASE+0x8000)
+#define EFM32_MSC_DEV_INFO              (EFM32_MSC_INFO_BASE+0x81B0)
+#define EFM32_MSC_BOOTLOADER            (EFM32_MSC_INFO_BASE+0x10000)
 
 /* PAGE_SIZE is not present in Zero, Happy and the original Gecko MCU */
-#define EFM32_MSC_DI_PAGE_SIZE          (EFM32_MSC_DEV_INFO+0x1e7)
-#define EFM32_MSC_DI_FLASH_SZ           (EFM32_MSC_DEV_INFO+0x1f8)
-#define EFM32_MSC_DI_RAM_SZ             (EFM32_MSC_DEV_INFO+0x1fa)
-#define EFM32_MSC_DI_PART_NUM           (EFM32_MSC_DEV_INFO+0x1fc)
-#define EFM32_MSC_DI_PART_FAMILY        (EFM32_MSC_DEV_INFO+0x1fe)
-#define EFM32_MSC_DI_PROD_REV           (EFM32_MSC_DEV_INFO+0x1ff)
+#define EFM32_MSC_DI_PAGE_SIZE          (EFM32_MSC_DEV_INFO+0x37)
+#define EFM32_MSC_DI_FLASH_SZ           (EFM32_MSC_DEV_INFO+0x48)
+#define EFM32_MSC_DI_RAM_SZ             (EFM32_MSC_DEV_INFO+0x4a)
+#define EFM32_MSC_DI_PART_NUM           (EFM32_MSC_DEV_INFO+0x4c)
+#define EFM32_MSC_DI_PART_FAMILY        (EFM32_MSC_DEV_INFO+0x4e)
+#define EFM32_MSC_DI_PROD_REV           (EFM32_MSC_DEV_INFO+0x4f)
 
 #define EFM32_MSC_REGBASE               0x400c0000
 #define EFM32_MSC_REGBASE_SERIES1       0x400e0000
@@ -119,9 +120,9 @@ static const struct efm32_family_data efm32_families[] = {
 		{ 16, "EFR32MG1P Mighty", .series = 1 },
 		{ 17, "EFR32MG1B Mighty", .series = 1 },
 		{ 18, "EFR32MG1V Mighty", .series = 1 },
-		{ 19, "EFR32MG1P Blue", .series = 1 },
-		{ 20, "EFR32MG1B Blue", .series = 1 },
-		{ 21, "EFR32MG1V Blue", .series = 1 },
+		{ 19, "EFR32BG1P Blue", .series = 1 },
+		{ 20, "EFR32BG1B Blue", .series = 1 },
+		{ 21, "EFR32BG1V Blue", .series = 1 },
 		{ 25, "EFR32FG1P Flex", .series = 1 },
 		{ 26, "EFR32FG1B Flex", .series = 1 },
 		{ 27, "EFR32FG1V Flex", .series = 1 },
@@ -960,7 +961,6 @@ static int efm32x_probe(struct flash_bank *bank)
 	struct efm32x_flash_bank *efm32x_info = bank->driver_priv;
 	struct efm32_info efm32_mcu_info;
 	int ret;
-	uint32_t base_address = 0x00000000;
 	char buf[256];
 
 	efm32x_info->probed = false;
@@ -974,9 +974,23 @@ static int efm32x_probe(struct flash_bank *bank)
 	if (ERROR_OK != ret)
 		return ret;
 
+	if ((bank->base == EFM32_MSC_USER_DATA) ||
+		(bank->base == EFM32_MSC_LOCK_BITS)) {
+		efm32_mcu_info.flash_sz_kib = 2;
+		efm32_mcu_info.page_size = 2048;
+	}
+	else if (bank->base == EFM32_MSC_DEV_INFO) {
+		efm32_mcu_info.flash_sz_kib = 1;
+		efm32_mcu_info.page_size = 1024;
+	}
+	else if (bank->base == EFM32_MSC_BOOTLOADER) {
+		efm32_mcu_info.flash_sz_kib = 32;
+		efm32_mcu_info.page_size = 2048;
+	}
+
 	LOG_INFO("detected part: %s", buf);
-	LOG_INFO("flash size = %dkbytes", efm32_mcu_info.flash_sz_kib);
-	LOG_INFO("flash page size = %dbytes", efm32_mcu_info.page_size);
+	LOG_INFO("flash size = %d KiB", efm32_mcu_info.flash_sz_kib);
+	LOG_INFO("flash page size = %d B", efm32_mcu_info.page_size);
 
 	assert(0 != efm32_mcu_info.page_size);
 
@@ -988,7 +1002,6 @@ static int efm32x_probe(struct flash_bank *bank)
 	free(bank->sectors);
 	bank->sectors = NULL;
 
-	bank->base = base_address;
 	bank->size = (num_pages * efm32_mcu_info.page_size);
 	bank->num_sectors = num_pages;
 
diff --git a/tcl/board/efm32_bootloader.cfg b/tcl/board/efm32_bootloader.cfg
new file mode 100644
index 000000000..2081c5abc
--- /dev/null
+++ b/tcl/board/efm32_bootloader.cfg
@@ -0,0 +1,11 @@
+# Configuration for EFM32 boards with on-board SEGGER J-Link
+#
+# Tested with Tiny, Giant and Zero Gecko Starter Kit.
+#
+
+source [find interface/jlink.cfg]
+transport select swd
+adapter speed 1000
+
+set CHIPNAME efm32
+source [find target/efm32_bootloader.cfg]
diff --git a/tcl/target/efm32_bootloader.cfg b/tcl/target/efm32_bootloader.cfg
new file mode 100644
index 000000000..7de72d7a8
--- /dev/null
+++ b/tcl/target/efm32_bootloader.cfg
@@ -0,0 +1,8 @@
+source [find target/efm32.cfg]
+
+# Additional flash banks.
+# Not all banks are available in all EFM32 nor EFR32.
+flash bank $_FLASHNAME.userdata   efm32 0x0FE00000 0x0800 0 0 $_TARGETNAME
+flash bank $_FLASHNAME.lockbits   efm32 0x0FE04000 0x0800 0 0 $_TARGETNAME
+flash bank $_FLASHNAME.devinfo    efm32 0x0FE081B0 0x0400 0 0 $_TARGETNAME
+flash bank $_FLASHNAME.bootloader efm32 0x0FE10000 0x8000 0 0 $_TARGETNAME
